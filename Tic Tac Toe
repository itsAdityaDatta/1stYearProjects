#include <stdio.h>
#include <stdlib.h>     // clrscr()

void display();
int iswon = 0;
void checkifwon();
int count = 0;
void end();


struct matrix
{
    char num[9];

}matrix1;


void main()
{

    matrix1.num[0] = '0';
    matrix1.num[1] = '1';
    matrix1.num[2] = '2';
    matrix1.num[3] = '3';
    matrix1.num[4] = '4';
    matrix1.num[5] = '5';
    matrix1.num[6] = '6';
    matrix1.num[7] = '7';
    matrix1.num[8] = '8';

    display();


    for(;iswon != 1;)
    {
        int num;
        if(count%2 == 0)
        {
            printf("\n\nPlayer X Enter The Number : ");
            scanf("%d",&num);
            if(matrix1.num[num] != 'X' && matrix1.num[num] != 'O' && num >=0 && num < 9)
            {
                matrix1.num[num] = 'X';
                display();
                count++;
            }

            else
            printf("Invalid Input : Try Again\n");


        }

        else
        {
            printf("\n\nPlayer O Enter The Number : ");
            scanf("%d",&num);
            if(matrix1.num[num] != 'X' && matrix1.num[num] != 'O' && num >=0 && num < 9)
            {
                matrix1.num[num] = 'O';
                display();
                count++;
            }

            else
            printf("Invalid Input : Try Again\n");


        }
    }

}

void display()
{
    system("cls");
    printf("\033[1;33m"); //Set the text to the color red
    printf("\n\n\t\t\t        ~ TIC TAC TOE ~\n\n");
    printf("\033[0m"); //Resets the text to default color



    printf("  \n\t\t\t  ________ _______ ________\
           \n\t\t\t |        |       |        |\n\
                 \t |    %c   |   %c   |    %c   |\n\
              \t\t |________|_______|________|\n\t\t\t |        |       |        |\n\
              \t\t |    %c   |   %c   |    %c   |\n\
              \t\t |________|_______|________|\n\t\t\t |        |       |        |\n\
              \t\t |    %c   |   %c   |    %c   |\n\
           \t\t |________|_______|________|\n\n",\
           matrix1.num[0],matrix1.num[1],matrix1.num[2],matrix1.num[3],matrix1.num[4],\
              matrix1.num[5],matrix1.num[6],matrix1.num[7],matrix1.num[8]);


              checkifwon();
}

void checkifwon()
{

    if(matrix1.num[0] == 'X' && matrix1.num[1] == 'X' && matrix1.num[2] == 'X' || \
       matrix1.num[3] == 'X' && matrix1.num[4] == 'X' && matrix1.num[5] == 'X' || \
       matrix1.num[6] == 'X' && matrix1.num[7] == 'X' && matrix1.num[8] == 'X' || \
       matrix1.num[0] == 'X' && matrix1.num[3] == 'X' && matrix1.num[6] == 'X' || \
       matrix1.num[1] == 'X' && matrix1.num[4] == 'X' && matrix1.num[7] == 'X' || \
       matrix1.num[2] == 'X' && matrix1.num[5] == 'X' && matrix1.num[8] == 'X' || \
       matrix1.num[0] == 'X' && matrix1.num[4] == 'X' && matrix1.num[8] == 'X' || \
       matrix1.num[2] == 'X' && matrix1.num[4] == 'X' && matrix1.num[6] == 'X')
    {
        printf("\n\n\aPlayer X has Won!\n\n\n");
        iswon = 1;
        end();
    }

    else if(matrix1.num[0] == 'O' && matrix1.num[1] == 'O' && matrix1.num[2] == 'O' || \
       matrix1.num[3] == 'O' && matrix1.num[4] == 'O' && matrix1.num[5] == 'O' || \
       matrix1.num[6] == 'O' && matrix1.num[7] == 'O' && matrix1.num[8] == 'O' || \
       matrix1.num[0] == 'O' && matrix1.num[3] == 'O' && matrix1.num[6] == 'O' || \
       matrix1.num[1] == 'O' && matrix1.num[4] == 'O' && matrix1.num[7] == 'O' || \
       matrix1.num[2] == 'O' && matrix1.num[5] == 'O' && matrix1.num[8] == 'O' || \
       matrix1.num[0] == 'O' && matrix1.num[4] == 'O' && matrix1.num[8] == 'O' || \
       matrix1.num[2] == 'O' && matrix1.num[4] == 'O' && matrix1.num[6] == 'O')
    {
        printf("\n\n\aPlayer O Has Won!\n\n\n");
        iswon = 1;
        end();
    }

    else
    {
        if(count == 8)
        {
            printf("\n\n\aIt's a Draw!\n\n\n");
            iswon = 1;
            end();
        }
    }

}

void end()
{
    printf("\nPress 1 : Start A New Game");
    printf("\nPress 2 : Exit \n\n");
    int inp;
    scanf("%d",&inp);
    switch(inp)
    {
        case 1:
        {
            iswon = 0;
            count = 0;
            return main();
            break;
        }


        case 2:
        {
            break;
        }
    }

}
